// InstructionScreen.jsx
import React from 'react';
import { toast } from 'react-toastify';
import { speak } from '../../api/voiceRecognition';
import CommandsTable from '../InstructionScreen/CommandsTable';
import './style.css';

const PopUp = ({ setPopUp, setIsRecognitionActive }) => {
  const handleStart = async () => {
    setPopUp(false);
    toast.dark('H√£y b·∫Øt ƒë·∫ßu ra l·ªánh b·∫±ng gi·ªçng n√≥i c·ªßa b·∫°n');
    await speak('H√£y b·∫Øt ƒë·∫ßu ra l·ªánh b·∫±ng gi·ªçng n√≥i c·ªßa b·∫°n');
    setIsRecognitionActive(true);
  };

  const sections = [
    {
      title: 'D·ª´ng/B·∫≠t nh·∫≠n l·ªánh',
      commands: [
        { commands: ['d·ª´ng nh·∫≠n'], info: 'D·ª´ng ch·∫ø ƒë·ªô nh·∫≠n l·ªánh gi·ªçng n√≥i.' },
        { commands: ['b·∫≠t nghe'], info: 'B·∫≠t l·∫°i ch·∫ø ƒë·ªô nh·∫≠n l·ªánh gi·ªçng n√≥i.' },
      ],
    },
    {
      title: 'ƒêi·ªÅu h∆∞·ªõng trang',
      commands: [
        {
          commands: ['ƒëi t·ªõi <_t√™n trang_>'],
          info: "ƒêi t·ªõi trang mong mu·ªën. VD: 'ƒëi t·ªõi trang ch·ªß'",
        },
      ],
    },
    {
      title: 'ƒêi·ªÅu khi·ªÉn l·ªãch s·ª≠ trang',
      commands: [
        {
          commands: ['quay l·∫°i', 'ti·∫øn t·ªõi'],
          info: 'Di chuy·ªÉn qua l·∫°i gi·ªØa c√°c trang.',
        },
      ],
    },
    {
      title: 'M·ªü Video',
      commands: [
        {
          commands: ['m·ªü video s·ªë <_n_>'],
          info: 'M·ªü video d·ª±a tr√™n s·ªë th·ª© t·ª±.',
        },
      ],
    },
    {
      title: 'ƒêi·ªÅu khi·ªÉn Video',
      commands: [
        {
          commands: ['ph√°t video', 't·∫°m d·ª´ng video'],
          info: 'Ph√°t ho·∫∑c t·∫°m d·ª´ng video.',
        },
        {
          commands: ['tua t·ªõi <_n_> gi√¢y', 'l√πi <_n_> gi√¢y'],
          info: 'Tua video t·ªõi/l√πi th·ªùi gian.',
        },
      ],
    },
    {
      title: 'Chuy·ªÉn trang video',
      commands: [
        {
          commands: ['trang ti·∫øp', 'trang tr∆∞·ªõc'],
          info: 'Chuy·ªÉn sang trang video k·∫ø ti·∫øp ho·∫∑c tr∆∞·ªõc ƒë√≥.',
        },
      ],
    },
    {
      title: 'Cu·ªôn Trang',
      commands: [
        {
          commands: ['k√©o xu·ªëng', 'k√©o l√™n', 'cu·ªëi trang', 'ƒë·∫ßu trang'],
          info: 'Cu·ªôn trang l√™n, xu·ªëng ho·∫∑c t·ªõi ƒë·∫ßu/cu·ªëi trang.',
        },
      ],
    },
    {
      title: 'T√¨m ki·∫øm',
      commands: [
        {
          commands: ['t√¨m ki·∫øm <_t·ª´ kho√°_>'],
          info: 'T√¨m ki·∫øm n·ªôi dung theo t·ª´ kho√°.',
        },
      ],
    },
    {
      title: 'G·ª≠i Bi·ªÉu M·∫´u',
      commands: [
        { commands: ['g·ª≠i bi·ªÉu m·∫´u'], info: 'G·ª≠i form ƒë√£ ƒëi·ªÅn th√¥ng tin.' },
      ],
    },
  ];

  return (
    <div className="popup">
      <div className="popup__card">
        <div className="popup__header">
          <h4 className="popup__title">üì¢ H∆∞·ªõng D·∫´n S·ª≠ D·ª•ng B·∫±ng Gi·ªçng N√≥i</h4>
          <button className="popup__start-btn" onClick={handleStart}>
            B·∫Øt ƒë·∫ßu
          </button>
        </div>
        <div className="popup__body">
          {sections.map((section, idx) => (
            <div key={idx} className="popup__section">
              <h5 className="popup__subtitle">{section.title}</h5>
              <CommandsTable cols={['L·ªánh', 'M√¥ t·∫£']} rows={section.commands} />
            </div>
          ))}
        </div>
      </div>
    </div>
  );
};

export default PopUp;
